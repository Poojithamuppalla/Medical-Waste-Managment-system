/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.PasswordUtils;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import java.util.Properties;
import java.util.Random;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;

/**
 *
 * @author tejas
 */
public class ForgotPasswordJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ForgotPasswordJPanel
     */
    private EcoSystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private String pin="";
    public ForgotPasswordJPanel(EcoSystem system) {
        this.system = system;
        initComponents();
        jLabel2.setVisible(false);
        passwordJTextField.setVisible(false);
        confirmJButton.setVisible(true);
        confirmPINJButton.setVisible(false);
        confirmPasswordJButton.setVisible(false);
        nameJTextField.setEnabled(true);
    }
    private String sendEmail(String emailAdd) {
            final String to = emailAdd;
            boolean sessionDebug=false;
            String from = "tejaswichillakuru@gmail.com";
            String host = "smtp.gmail.com";
            String user = "tejaswichillakuru@gmail.com";
            String pass = "Tej@swi12";
            Properties properties = System.getProperties();  
            properties.setProperty("mail.smtp.host", host);
            properties.put("mail.smtp.starttls.required", "true");
            properties.put("mail.smtp.starttls.enable", "true");
            properties.put("mail.smtp.host",host);  
            properties.put("mail.smtp.port", "587");  
            properties.put("mail.smtp.auth", "true");  
            java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());  
            Session session;
            session = Session.getDefaultInstance(properties,  null);
            session.setDebug(sessionDebug);
            Random r = new Random();
             pin = String.format("%04d", r.nextInt(10000));
            try{
            MimeMessage message = new MimeMessage(session);  
            message.setFrom(new InternetAddress(from));  
            message.setRecipient(Message.RecipientType.TO,new InternetAddress(to));  
            InternetAddress address;
            address = new InternetAddress(to);
            message.setSubject("Forgot Your Password");
            
            message.setText(pin+" is your code. Please dont share with anyone.");  
            Transport transport = session.getTransport("smtp");
            transport.connect(host,user,pass);
            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
            //JOptionPane.showMessageDialog(null, "Please check your email for further details!");
            }
            catch(Exception e){
                System.out.println(e);
                pin="";
            }
        return pin;
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        passwordJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        confirmJButton = new javax.swing.JButton();
        confirmPINJButton = new javax.swing.JButton();
        confirmPasswordJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel1.setText("User Name");

        nameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameJTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel2.setText("Password");

        confirmJButton.setBackground(new java.awt.Color(0, 153, 153));
        confirmJButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmJButton.setText("Confirm");
        confirmJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmJButtonActionPerformed(evt);
            }
        });

        confirmPINJButton.setBackground(new java.awt.Color(0, 153, 153));
        confirmPINJButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmPINJButton.setText("Confirm Your PIN");
        confirmPINJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPINJButtonActionPerformed(evt);
            }
        });

        confirmPasswordJButton.setBackground(new java.awt.Color(0, 153, 153));
        confirmPasswordJButton.setForeground(new java.awt.Color(255, 255, 255));
        confirmPasswordJButton.setText("Confirm Your Password");
        confirmPasswordJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmPasswordJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(confirmPasswordJButton)
                            .addComponent(confirmPINJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirmJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordJTextField))))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(confirmPasswordJButton)
                .addGap(18, 18, 18)
                .addComponent(confirmPINJButton)
                .addGap(18, 18, 18)
                .addComponent(confirmJButton)
                .addContainerGap(253, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameJTextFieldActionPerformed

    private void confirmJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmJButtonActionPerformed
        String userName = nameJTextField.getText();
        if(userName==null||userName.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter your userid");
            return;
        }
        int count = 0;
        for(Network network:system.getNetworkList()){
           for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
              for (UserAccount ua :enterprise.getUserAccountDirectory().getUserAccountList()){
                 if(userName.equals(ua.getUsername())){
                   pin = sendEmail("rishvita@gmail.com");
                    if(pin==null||pin.equals("")){
                     JOptionPane.showMessageDialog(null, "ERROR : Password Change Failed. Please try again.");
                     return;
                    }
                    JOptionPane.showMessageDialog(null, "Please enter the pin that you got in your mail.");
                    jLabel2.setText("PIN");
                    jLabel2.setVisible(true);
                    passwordJTextField.setVisible(true);
                    confirmJButton.setVisible(false);
                    confirmPINJButton.setVisible(true);
                    nameJTextField.setEnabled(false);
                    count = 1;
                    break;
                 }
              }
           }
        }
        if(count==0){
        for(Network network:system.getNetworkList()){
           for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
              for (Organization org :enterprise.getOrganizationDirectory().getOrganizationList()){
                 for (UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {
                   if(userName.equals(ua.getUsername())){
                   pin = sendEmail("rishvita@gmail.com");
                    if(pin==null||pin.equals("")){
                     JOptionPane.showMessageDialog(null, "ERROR : Password Change Failed. Please try again.");
                     return;
                    }
                    JOptionPane.showMessageDialog(null, "Please enter the pin that you got in your mail.");
                    jLabel2.setText("PIN");
                    jLabel2.setVisible(true);
                    passwordJTextField.setVisible(true);
                    confirmJButton.setVisible(false);
                    confirmPINJButton.setVisible(true);
                    nameJTextField.setEnabled(false);
                    count = 1;
                    break;
                 }
              }
            }
          }
        }
        }
        if(count==0){
           JOptionPane.showMessageDialog(null, "Please enter Valid UserId.");
                     return; 
        }
       dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_confirmJButtonActionPerformed

    private void confirmPINJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPINJButtonActionPerformed
        String enteredPin = passwordJTextField.getText();
        if(enteredPin==null||enteredPin.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter the pin that you got in your mail.");
            return;
        }
        if(enteredPin.equals(pin)){
            JOptionPane.showMessageDialog(null, "PIN you have entered is correct. Please change your password.");
            jLabel2.setText("Password");
            passwordJTextField.setText("");
            jLabel2.setVisible(true);
            passwordJTextField.setVisible(true);
            confirmJButton.setVisible(false);
            confirmPINJButton.setVisible(false);
            confirmPasswordJButton.setVisible(true);
            nameJTextField.setEnabled(false);
            return;
        }
        else{
          JOptionPane.showMessageDialog(null, "PIN you have entered doesn't match.");
          return;
        }
        
        
        
    }//GEN-LAST:event_confirmPINJButtonActionPerformed
    private boolean isPasswordValid(String password)
    {
        String regex = "((?=.*[a-z])(?=.*\\d)(?=.*[A-Z])(?=.*[@#$%!]).{6,40})";
        return password.matches(regex);
    }
    private void confirmPasswordJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmPasswordJButtonActionPerformed
        String userName = nameJTextField.getText();
        String enteredPassword = passwordJTextField.getText();
        passwordJTextField.setBorder(new LineBorder(new Color(128,128,128)));
        jLabel2.setForeground(Color.BLACK);
        if(enteredPassword==null||enteredPassword.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter the password.");
            return;
        }
        if(isPasswordValid(enteredPassword)==false){
            passwordJTextField.setBorder(BorderFactory.createLineBorder(Color.RED));
            jLabel2.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "The password should consist of atleast 1 Uppercase, 1 Lowercase, 1 Digit, 1 special character and should of length between 6 and 40");
            return;
        }
        int count =0;
         String salt = PasswordUtils.getSalt(30);
        String mySecurePassword = PasswordUtils.generateSecurePassword(enteredPassword, salt);
         for(Network network:system.getNetworkList()){
           for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
              for (UserAccount ua :enterprise.getUserAccountDirectory().getUserAccountList()){
                 if(userName.equals(ua.getUsername())){
                    ua.setPassword(mySecurePassword);
                    ua.setSalt(salt);
                    JOptionPane.showMessageDialog(null,"Your Password has been changed successfully");
                    passwordJTextField.setText("");
                    confirmPasswordJButton.setVisible(false);
                    count=1;
                 }
               }  
           }
         }
        if(count==0){
         for(Network network:system.getNetworkList()){
           for(Enterprise enterprise:network.getEnterpriseDirectory().getEnterpriseList()){
             for (Organization org :enterprise.getOrganizationDirectory().getOrganizationList()){
                 for (UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {
                 if(userName.equals(ua.getUsername())){
                    ua.setPassword(mySecurePassword);
                    ua.setSalt(salt);
                    JOptionPane.showMessageDialog(null,"Your Password has been changed successfully");
                    passwordJTextField.setText("");
                    confirmPasswordJButton.setVisible(false);
                    count=1;
                 }
               }  
           }
           }
         }
        }
         if(count==0){
           JOptionPane.showMessageDialog(null, "Please enter Valid UserId.");
           return; 
        }
        
    }//GEN-LAST:event_confirmPasswordJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmJButton;
    private javax.swing.JButton confirmPINJButton;
    private javax.swing.JButton confirmPasswordJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JTextField passwordJTextField;
    // End of variables declaration//GEN-END:variables
}
